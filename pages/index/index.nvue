<template>
	<div class="page" :style="pageStyle">
		<div class="item">
			<view class="btn_box">
				<icon-btn @handleLong="longTap" @handleTap="handleTap"  style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
			<view class="btn_box"> 
				<icon-btn @handleTap="handleTap" style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
			<view class="btn_box">
				<icon-btn style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
		</div>
		<div class="item">
			<view class="btn_box">
				<icon-btn @handleTap="handleTap" style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
			<view class="btn_box">
				<icon-btn style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
			<view class="btn_box">
				<icon-btn style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
		</div>
		<div class="item">
			<view class="btn_box">
				<icon-btn @handleTap="handleTap" style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
			<view class="btn_box">
				<icon-btn style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
			<view class="btn_box">
				<icon-btn style="height: 150rpx; width: 150rpx;"></icon-btn>
			</view>
		</div>
		<view style="position: fixed;">
			<popup  ref="popup"></popup>
		</view>
	</div>
</template>

<script>
	import iconBtn from '@/components/icon_btn.nvue'
	import popup from '@/components/popup.nvue'
	export default {
		components: {
			iconBtn,
			popup
		},
		data() {
			return {
				windowHeight: 0
			}
		},
		onLoad() {
			this.$nextTick(async () => {
				let res = await this.getWindowSize()
				let {
					windowHeight
				} = res
				this.windowHeight = windowHeight
			})
		},
		created() {

		},
		methods: {
			handleTap(e) {
				console.log('tap', e)
				
				this.$refs.popup.show(e)
			},
			longTap(e) {
				console.log('long', e)
			},
			getWindowSize() {
				return new Promise((res, rej) => {
					uni.getSystemInfo({
						success: data => {
							res(data)
						},
						fail: err => {
							rej(err)
						}
					})
				})
			}
		},
		computed: {
			pageStyle() {
				let height = this.windowHeight
				return `height: ${height}px`
			}
		}
	}
</script>

<style scoped>
	/* 页面样式 */
	.page {
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		background-color: #F8F8F8;
		justify-content: space-between;
		flex-direction: column;
		padding-top: 40upx;
		padding-bottom: 40upx;
	}

	/* 公共样式 */
	.item {
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		justify-content: space-between;
		flex-direction: row;
		padding-left: 30upx;
		padding-right: 30upx;
	}

	.btn_box {
		width: 200upx;
		justify-content: center;
		align-items: center;
	}
</style>
